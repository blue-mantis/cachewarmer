{# @var craft \craft\web\twig\variables\CraftVariable #}
{#
/**
 * Cache Warmer plugin for Craft CMS 3.x
 *
 * Cache Warmer Settings.twig
 *
 * @author    Bluemantis
 * @copyright Copyright (c) 2020 Bluemantis
 * @link      https://bluemantis.com
 * @package   CacheWarmer
 * @since     0.1
 */
#}

{% import "_includes/forms" as forms %}

{% do view.registerAssetBundle("bluemantis\\cachewarmer\\assetbundles\\cachewarmer\\CacheWarmerAsset") %}

{{ forms.textField({
  label: "Max items per batch"|t,
  id: 'itemsPerBatch',
  name: 'itemsPerBatch',
  instructions: "How many items to do as part of each batch job. 1 will create a queued job for each individual URL, 100 will create jobs of batches of 100, etc. If you're using the asyncqueues plugin this number can be fairly high, but otherwise keep it reasonably low."|t,
  value: settings.itemsPerBatch,
  autofocus: true,
  errors: settings.getErrors('itemsPerBatch'),
  type: 'number'
}) }}

{{ forms.textField({
  label: "Time between requests (seconds)"|t,
  id: 'timeBetweenRequests',
  name: 'timeBetweenRequests',
  instructions: "You may want to add some time between requests to ensure you're not slowing down the site. Leave at zero to request as soon as the previous one completes."|t,
  value: settings.timeBetweenRequests,
  autofocus: true,
  errors: settings.getErrors('timeBetweenRequests'),
  type: 'number'
}) }}

{{ forms.lightswitchField({
  id: 'warmChangedElements',
  name: 'warmChangedElements',
  label: 'Attempt to automatically cachewarm entries when saved?' | t,
  on: settings.warmChangedElements,
  instructions: 'If you\'re running a long import and calling this plugin manually at the end, this may double them up.' | t
}) }}

{#<div class="field">
  <div class="heading">
    <label id="settings-warmChangedElements-label" for="settings-warmChangedElements"></label>
    <div class="instructions"><p>If you're running a long import and calling this plugin manually at the end, this may conflict</p>
    </div>
  </div>
  {{ forms.lightswitch({
    onLabel: "Should the plugin attempt to cachewarm entries automatically when they're saved?"|t,
    offLabel: "Should the plugin attempt to cachewarm entries automatically when they're saved?"|t,
    id: 'warmChangedElements',
    name: 'warmChangedElements',
    instructions: "If you're running a long import and calling this plugin manually at the end, this may double them up"|t,
    value: settings.warmChangedElements,
    autofocus: true,
    errors: settings.getErrors('warmChangedElements'),
  }) }}
</div>#}

<div style="margin-bottom:60px;"></div>

<h2>Sections</h2>

{% if sections|length %}
  {% for group in sections %}
    {% if group.sections|length %}
      {% set siteId = group.site.id %}
      {% if sections|length > 1 %}
        <h4 style="margin-bottom:10px;">{{ group.site.name }}</h4>
      {% endif %}
      <table id="sections" class="data fullwidth collapsible" style="margin-bottom:50px;">
        <thead>
        <th scope="col" class="thin">Include</th>
        <th scope="col">{{ "Name"|t }}</th>
        <th scope="col" style="width:100px;">{{ "Pages"|t }}</th>
        </thead>
        <tbody>
        {% for sectionData in group.sections %}
          {% set handle = sectionData.section.handle %}
          {% set sectionSettings = settings.enabledSections[siteId][handle] is defined ? settings.enabledSections[siteId][handle] : false %}

          <tr data-id="{{ sectionData.section.id }}" data-name="{{ sectionData.section.name|t }}">
            <td class="thin">
              {% set fieldname = 'enabledSections[' ~ siteId ~ '][' ~ handle ~ '][enabled]' %}
              {% set enabled = (sectionSettings.enabled is defined and sectionSettings.enabled is not empty ? sectionSettings.enabled : false) %}
              {{ forms.lightswitch({
                name: fieldname,
                on:   enabled,
              }) }}
            </td>
            <th scope="row" data-title="{{ 'Name'|t }}"><a href="{{ url('settings/sections/' ~ sectionData.section.id) }}">{{ sectionData.section.name|t }}</a></th>
            <td data-title="{{ 'Entries'|t }}">{{ sectionData.count }}</td>
          </tr>
        {% endfor %}
        </tbody>
      </table>
    {% endif %}
  {% endfor %}
{% else %}
  <div id="nosections" class="hidden">
    <p>{{ "No sections to add"|t }}</p>
  </div>
{% endif %}

{% if categoryGroups|length %}
  {% for group in categoryGroups %}
    {% if group.categoryGroups|length %}
      {% set siteId = group.site.id %}
      {% if categoryGroups|length > 1 %}
        <h4 style="margin-bottom:10px;">{{ group.site.name }}</h4>
      {% endif %}
      <table id="sections" class="data fullwidth collapsible" style="margin-bottom:50px;">
        <thead>
        <th scope="col" class="thin">Include</th>
        <th scope="col">{{ "Name"|t }}</th>
        <th scope="col" style="width:100px;">{{ "Pages"|t }}</th>
        {#<th scope="col">{{ "URL Format"|t }}</th>#}
        </thead>
        <tbody>
        {% for categoryGroupData in group.categoryGroups %}
          {% set handle = categoryGroupData.categoryGroup.handle %}
          {% set categoryGroupSettings = settings.enabledCategoryGroups[siteId][handle] is defined ? settings.enabledCategoryGroups[siteId][handle] : false %}

          <tr data-id="{{ categoryGroupData.categoryGroup.id }}" data-name="{{ categoryGroupData.categoryGroup.name|t }}">
            <td class="thin">
              {% set fieldname = 'enabledCategoryGroups[' ~ siteId ~ '][' ~ handle ~ '][enabled]' %}
              {% set enabled = (categoryGroupSettings.enabled is defined and categoryGroupSettings.enabled is not empty ? categoryGroupSettings.enabled : false) %}
              {{ forms.lightswitch({
                name: fieldname,
                on:   enabled,
              }) }}
            </td>
            <th scope="row" data-title="{{ 'Name'|t }}"><a href="{{ url('settings/categories/' ~ categoryGroupData.categoryGroup.id) }}">{{ categoryGroupData.categoryGroup.name|t }}</a></th>
            <td data-title="{{ 'Category Groups'|t }}">{{ categoryGroupData.count }}</td>
            {#<td data-title="{{ 'URL Format'|t }}" dir="ltr" style="">
              {{ categoryGroupData.categoryGroup.getSiteSettings[siteId].uriFormat }}
            </td>#}
          </tr>
        {% endfor %}
        </tbody>
      </table>
    {% endif %}
  {% endfor %}
{% else %}
  <div id="nosections" class="hidden">
    <p>{{ "No category groups to add"|t }}</p>
  </div>
{% endif %}


{% if productTypes|length %}
  {% for group in productTypes %}
    {% if group.types|length %}
      {% set siteId = group.site.id %}
      <h2>Commerce Product Types</h2>
      <table id="productTypes" class="data fullwidth collapsible">
        <thead>
          <th scope="col" class="thin">Include</th>
          <th scope="col">{{ "Name"|t }}</th>
          <th scope="col" style="width:100px;">{{ "Pages"|t }}</th>
        </thead>
        <tbody>
        {% for productTypeData in group.types %}
          {% set id = productTypeData.type.id %}

          {% set productTypeSettings = settings.enabledProductTypes[siteId][id] is defined ? settings.enabledProductTypes[siteId][id] : false %}

          <tr data-id="{{ productTypeData.type.id }}" data-name="{{ productTypeData.type.name|t }}">
            <td class="thin">
              {% set fieldname = 'enabledProductTypes[' ~ siteId ~ '][' ~ id ~ '][enabled]' %}
              {% set enabled = (productTypeSettings.enabled is defined and productTypeSettings.enabled is not empty ? productTypeSettings.enabled : false) %}
              {{ forms.lightswitch({
                name: fieldname,
                on:   enabled,
              }) }}
            </td>
            <th scope="row" data-title="{{ 'Name'|t }}"><a href="{{ url('commerce/settings/producttypes/' ~ productTypeData.type.id) }}">{{ productTypeData.type.name|t }}</a></th>
            <td data-title="{{ 'Entries'|t }}">{{ productTypeData.count }}</td>
          </tr>
        {% endfor %}
        </tbody>
      </table>
    {% endif %}
  {% endfor %}
{% endif %}

<h4 style="margin-bottom:10px;">Custom URLs</h4>
<p>Enter any extra URLs you wanted warmed in the box below, such as popular search endpoints, etc.</p>
<p>URLs should be entered one per line</p>

{{ forms.textarea({
  name: 'customUrls',
  value: settings.customUrls,
  rows: 30
}) }}

<div style="margin-bottom: 50px;"></div>